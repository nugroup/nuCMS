{% extends 'base.html.twig' %}

{% block body %}

    <!-- page list -->
    <div class="container">

        <!-- fileManager -->
        <div id="fileManager">

            <div class="row">
                <div class="col-sm-3">

                    <button class="btn btn-save btn-sm fileShowUpload" type="button"><i class="fa fa-arrow-down"></i>{{ lang('file.text.add_files') }}</button><br><br>
                    <button class="btn btn-save btn-sm fildFolderAdd" type="button"><i class="fa fa-plus"></i>{{ lang('file.text.add_folder') }}</button>

                    <!-- folderTree -->
                    <div class="folderTreeBox">
                        <ul class="folderTree">
                            {{ files_folders_tree | raw }}
                        </ul>
                    </div>

                </div>
                <div class="col-sm-9">
                    {{ form_open(current_url(), 'id="files-list-form"') }}

                    <div class="row">
                        <div class="col-sm-4">
                            <!-- dropdown actions -->
                            <div class="inLine">
                                <span class="txtUpper">{{ lang('text.checked_items') }}:</span>
                                <span class="btn-group dropdown nuDropdown">
                                    <span data-toggle="dropdown" class="txtBig hoverLine">{{ lang('text.choose') }} <i class="fa fa-angle-down"></i></span>
                                    <ul class="dropdown-menu">
                                        <li>
                                            <button type="submit" name="action" value="delete_checked"><i class="ion ion-android-delete"></i>{{ lang('text.delete') }}</button>
                                        </li>
                                    </ul>
                                </span>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <!-- search input -->
                            <div class="input-group bigInput">
                                <div class="input-group-addon">
                                    <button type="submit">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </div>
                                {{ form_input({'name': 'string', 'class': 'form-control', 'id': 'filesSearchInput', 'value': input.get('string')}) }}
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="text-right">
{#                                <button class="btn btn-save" type="button"><i class="fa fa-check"></i>{{ lang('text.confirm') }}</button>#}
{#                                <button class="btn btn-red btn-circle btn-margin-left" type="button"><i class="fa fa-times"></i></button>#}
                            </div>
                        </div>
                    </div>

                    <!-- fileUploadBox -->
                    <div id="myDropzone" class="dropzone fileUploadBox">
                        <div class="dz-default dz-message inside">
                            <i class="fa fa-upload"></i>
                            <div class="information txtBig">{{ lang('file.text.uploader') }}</div>
                        </div>

                        <div class="myDropzoneClear"><i class="fa fa-times"></i> {{ lang('file.text.clear_files') }}</div>
                    </div>

                    <!-- filesList -->
                    <div id="filesList" class="filesList">
                        {{ files_list | raw }}
                    </div>

                    {{ form_input({'type': 'hidden', 'name': 'parent_id', 'class': 'form-control', 'id': 'parent_id_hidden'}) }}
                    {{ form_close() }}
                </div>
            </div>

        </div>

        <!-- margin -->
        <div class="clearfix baseMargin"></div>

    </div>

{% endblock %}

{% block javascript %}

    {{ parent() }}

    <script>

        /**
         * Load files list view
         *
         * @param {int} parentId
         * @param {string} url
         */
        function loadFilesList(parentId, url, suffix) {

            if (url.toString() !== '') {
                $("#filesList").load(url+suffix, function () {

                    $('body').goTo();

                });
            } else {
                $("#filesList").load('{{ admin_url('file/files_list') }}/' + parentId+suffix, function () {

                    $('body').goTo();

                });
            }

        }

        // -- files list ajax pagination
        $(document).on('click', '.filesListPagination a', function () {

            var pagerUrl = $(this).attr('href').toString();
            loadFilesList(0, pagerUrl, '');

            return false;

        });
        
        /**
         * Search action
         */
        $(document).on('keyup', '#filesSearchInput', function () {

{#            var url = $('#files-manager-search-url').val().toString();#}
            var stringValue = $(this).val().toString();
            $('#files-manager-content').load(url+'?string='+stringValue);

            return false;

        });

        // -- show file list by ajax
        $(document).on('click', '.loadFilesList', function () {

            var parentId = parseInt($(this).attr('data-parent_id'));
            loadFilesList(parentId, '');

            $('.folderTree li').removeClass('active');
            $(this).parent().toggleClass('active');
            $('#parent_id_hidden').val(parentId);

        });

        // -- dropzone
        Dropzone.autoDiscover = false;
        $("#myDropzone").dropzone({
            maxFilesize:{{ config.upload_max_file_size }},
            url: "{{ config.upload_action }}",
            paramName: "file",
            autoProcessQueue: true,
            success: function (file, response) {

                var parentId = parseInt($('#parent_id_hidden').val());
                loadFilesList(parentId, '');
                console.log(response);

                if (parseInt(response.result) === 1) {
{#                    file.previewElement.querySelector(".dz-remove").remove();#}
                    file.previewElement.classList.add("dz-success");
                } else {

                    if (response.errors) {
                        $('span[data-dz-errormessage]').html(response.errors);
                    }

                    return file.previewElement.classList.add("dz-error");
                }
            },
            sending: function (file, xhr, formData) {

                var parentId = parseInt($('#parent_id_hidden').val());
                formData.append('parent_id', parentId);

            },
            init: function () {

                var myDropzone = this;

                $('.myDropzoneClear').on("click", function (e) {
                    myDropzone.removeAllFiles(true);
                });

                this.on("error", function (file, response) {
                    //handle errors here
                });

            },
            dictFileTooBig: "{{ lang('file.dropzone.file_too_big') }}",
            dictResponseError: "{{ lang('file.dropzone.response_error') }}"
        });

    </script>

{% endblock %}