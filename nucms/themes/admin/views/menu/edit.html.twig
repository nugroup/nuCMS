{% extends 'base.html.twig' %}

{% block navigation %}

    <ul id="nuNavList">
        <li><a href="{{ admin_url('menu') }}">{{ lang('menu.nav.list') }}</a></li>
        <li><a href="{{ admin_url('menu/add') }}">{{ lang('menu.nav.add') }}</a></li>
        <li><a href="{{ admin_url('menu/edit/'~menu.id) }}" class="nuNavActive">{{ lang('menu.nav.edit') }}</a></li>
    </ul>

{% endblock %}

{% block body %}

    {{ form_open(current_url(), {'id': 'menu-edit-form', 'novalidate': 'novalidate'}) }}

    <!-- head -->
    <div id="nuActionbar" class="nuFormDark">
        <div class="container-fluid nuContainer">

            <div class="row nuActions nuActions-small">

                <div class="col-xs-12 col-sm-6 col-sm-push-6 col-md-5 col-md-push-7 col-lg-4 col-lg-push-8 text-right nuActionsButtonsCol">
                    <ul class="nuButtonsList">
                        <li><button id="edit-menu-submit" class="btn btn-success" type="submit"><i class="fa fa-check"></i> {{ lang('text.save') }}</button></li>
                    </ul>
                </div>

                <div class="col-xs-12 col-sm-6 col-sm-pull-6 col-md-7 col-md-pull-5 col-lg-8 col-lg-pull-4">

                    <!-- title/lang fields -->
                    <div class="input-group nuFormTitle">
                        <a class="btn btn-primary nuFormBack" href="{{ return_link }}" role="button"><i class="fa fa-angle-left"></i></a>
                        {% include('components/lang_select.html.twig') %}
                        {{ form_input({'type': 'text', 'name': 'name', 'value': menu.name, 'class': 'form-control', 'id': 'name', 'placeholder': lang('menu.form.name'),  'required': 'required'}) }}
                    </div>
                    <!-- /title/lang fields -->

                </div>

            </div>

        </div>
    </div>
    <!-- /head -->

    <!-- content -->
    <div id="nuEditPage" class="nuContent nuFormLight">
        <div class="container-fluid nuContainer tab-content">

            <div class="row tab-pane fade in active" role="tabpanel" id="settings">
                <div class="col-xs-12 col-sm-6 col-md-6 col-margin">

                    <!-- header with line -->
                    <div class="nuHead nuHeadLine">{{ lang('menu.head.data') }}:</div>
                    <!-- /header -->

                    <!-- active -->
                    <div class="nuCheckbox-single">
                        <label for="active">{{ lang('menu.form.active') }}:</label>
                        <label class="nuSwitch" for="active">
                            {{ form_checkbox({'id': 'active', 'name': 'active'}, 1, menu.active ) }}
                            <span></span>
                        </label>
                    </div>
                    <!-- /active -->

                    <!-- position -->
                    <div class="form-group">
                        <label>{{ lang('menu.form.position') }}</label>
                        {{ form_dropdown({'id': 'position', 'name': 'position', 'class': 'form-control'}, config.menu.positions, menu.position) }}
                        <span class="nuFocusLine"></span>
                    </div>
                    <!-- /position -->

                </div>

                <div class="col-xs-12 col-sm-6 col-md-6 col-margin">

                    <!-- header with line -->
                    <div class="nuHead">{{ lang('menu.head.items') }}:</div>
                    <!-- /header -->
                    
                    <div class="addItemsInputs">
                        {% include 'menu/items/add.html.twig' %}
                    </div>
                    
                    <div id="menu-items">
                        {% include 'menu/items/index.html.twig' %}
                    </div><!--/menu-items-->

                </div>

            </div>

        </div>
    </div>
    <!-- /content -->

    <input type="hidden" name="nested_order" id="nested_order" value="">
    <input type="hidden" id="menu_items_max_id" value="{{ menu_items_max_id }}">

    {{ form_close() }}
    
    <div class="editItemInputsGhost">
        {% include 'menu/items/edit.html.twig' %}
    </div><!--/.editItemInputs-->

{% endblock %}

{% block javascript %}

    {{ parent() }}

    <script src="{{ asset('js/jquery.mjs.nestedSortable.js') }}"></script>
    <script>

        $(document).on('change', '#menu-edit-form', function () {
            showBeforeUnload = true;
        });

        // -- run nested sortable after load
        runNestedSortable('.menu-items', '');

        // -- add menu item
        $(document).on('click', '.menuAdd', function () {

            var type = parseInt($(this).attr('data-menu_type'));
            var dataArray = divSerialize('#menu-add-form-' + type);
            var maxId = parseInt($('#menu_items_max_id').val());
            var newId = maxId+1;
            var typeIco = $('#menu-add-form-' + type).find('*[data-name="type_ico"]').val().toString();

            // Copy item element
            var newItem = $('.menu-items').children('li').last().clone().insertBefore('.menu-items .ghost');
            newItem.find('.menu_item_name').html(dataArray["name"]);

            // Remove data from copy
            var oldData = $(newItem).data(), i;
            var keys = $.map(oldData , function(value, key) { return key; });
            for(i = 0; i < keys.length; i++) {
                newItem.removeAttr("data-" + keys[i]);
            }
            newItem.removeData();

            // Add new data
            newItem.attr('data-id', 0);
            newItem.data('id', newId);
            newItem.attr('id', 'item_'+(maxId+1));
            for (row in dataArray) {
                console.log(row);
                if (row.toString() !== 'type_ico') {
                    newItem.attr('data-'+row, dataArray[row]);
                    newItem.data(row, dataArray[row]);
                }
            }
            
            // Set new id, icon
            newItem.find('.menuEdit').attr('rel', newId);
            newItem.find('.menuDelete').attr('rel', newId);
            newItem.find('.editItemInputs').attr('data-item_id', newId);
            newItem.find('.ico').attr('class', '').addClass(typeIco+' ico');

            // Remove children
            newItem.children('ol').remove();
            newItem.removeClass('ghost');
            newItem.removeAttr('style');
            newItem.show();
            runNestedSortable('.menu-items', '');

            // Change next id number
            $('#menu_items_max_id').val(newId);

            $('.addItem').hide();

            showBeforeUnload = true;

            return false;

        });

        // -- delete menu item
        $(document).on('click', '.menuDelete', function () {

            var itemId = parseInt($(this).attr('rel'));
            $('#item_'+itemId).remove();
            $('#menu-edit-form').append('<input type="hidden" name="menu_items_delete['+itemId+']" value="'+itemId+'">');

            // Get sort
            var oSortable = $('.menu-items').nestedSortable('serialize');
            $('#nested_order').val(oSortable);

            showBeforeUnload = true;

        });

        // -- save menu item
        $(document).on('click', '.menuSave', function () {

            var itemDiv = $(this).closest('.editItemInputs');
            var itemDivClass = itemDiv.attr('class');
            var idItem = parseInt(itemDiv.attr('data-item_id'));
            var type = parseInt($(this).attr('data-type'));
            var dataArray = divSerialize('.'+itemDivClass+'[data-item_id="'+idItem+'"] .editItem.type' + type);
            var itemElement = $('#item_'+idItem);
            
            // Change data value
            for (row in dataArray) {
                itemElement.attr('data-'+row, dataArray[row]);
                itemElement.data(row, dataArray[row]);
            }

            // Change name
            itemElement.children('.handler').find('.menu_item_name').html(dataArray['name']);

            // Close edit inputs
            itemDiv.html('').hide();

            showBeforeUnload = true;

            return false;

        });

        // -- edit menu item
        $(document).on('click', '.menuEdit', function () {

            var itemId = parseInt($(this).attr('rel'));
            var element = $('#item_'+itemId);
            var type = parseInt(element.attr('data-type'));
            var dataElements = [];
            var itemDiv = $('.editItemInputs[data-item_id="'+itemId+'"]');

            // move input from ghost to the item element
            var editFormHtml = $('.editItemInputsGhost').html();
            itemDiv.html(editFormHtml).show();
            
            // Insert value from data item
            var data = $(element).data(), i;
            var keys = $.map(data , function(value, key) { return key; });
            for(i = 0; i < keys.length; i++) {

                var value = element.data(keys[i]);
                itemDiv.find('.editItem.type' + type).find('*[data-name="'+keys[i]+'"]').val(value);

                // Set value for dropdown
                if (keys[i].toString() === 'primary_key' || keys[i].toString() === 'target') {
                    var selectedValue = itemDiv.find('.editItem.type'+type+' ul[data-name="'+keys[i].toString()+'"]').find('li[data-value="'+value+'"]').text();
                    itemDiv.find('.editItem.type' + type).find('span[data-name="'+keys[i].toString()+'"]').html(selectedValue);
                }

            }
            
            itemDiv.find('.editItem.type'+type).show();

        });

        // -- show add inputs
        $(document).on('click', '.addButtons button', function () {

            var type = parseInt($(this).attr('data-type'));
            $('.addItem').hide();
            $('.addItem.type' + type).show();

        });

        // -- close add inputs
        $(document).on('click', '.closeAddItem', function () {

            $('.addItem').hide();

        });

        // -- close edit inputs
        $(document).on('click', '.closeEditItem', function () {

            $(this).closest('.editItemInputs').html('').hide();

        });

        // -- submit form with all data
        $('#edit-menu-submit').click(function () {

            var dataArray = [];
            $('.menu-items li:not(.ghost)').each(function () {

                jQuery.removeData( this, "nestedSortableItem" );
                var tmpData = $(this).data();
                for (rowData in tmpData) {
                    $('#menu-edit-form').append('<input type="hidden" name="menu_items['+tmpData['id']+']['+rowData+']" value="'+tmpData[rowData]+'">');
                }

            });

            $('#menu-edit-form').submit();

        });

    </script>

{% endblock %}